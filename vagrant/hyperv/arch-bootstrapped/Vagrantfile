# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
    config.vm.box = "bfee-arch-bootstrapped-hyperv"

    config.vm.provider "hyperv" do |vb|
        #    vb.gui = true
        #    vb.memory = 4096
        #    vb.cpus = 2
    end

    config.vm.provision "ansible", run: "always" do |ansible|
        ansible.playbook = "../../ping.yml"
        ansible.config_file = "ansible.cfg"
        ansible.host_vars = {
            "default" => { "ansible_python_interpreter" => "/usr/bin/python2" }
        }
        ansible.compatibility_mode = "2.0"
        #    ansible.verbose = "vvvv"
    end
    if ARGV.include? '--provision-with'
        config.vm.provision "main", type: "ansible" do |ansible|
            ansible.playbook = "../../main.yml"
            ansible.config_file = "ansible.cfg"
            ansible.host_vars = {
                "default" => { "ansible_python_interpreter" => "/usr/bin/python2" }
            }
            ansible.ask_become_pass = true
            ansible.compatibility_mode = "2.0"
        end
        config.vm.provision "ping", type: "ansible" do |ansible|
            ansible.playbook = "../../ping.yml"
            ansible.config_file = "ansible.cfg"
            ansible.host_vars = {
                "default" => { "ansible_python_interpreter" => "/usr/bin/python2" }
            }
            ansible.compatibility_mode = "2.0"
        end
        config.vm.provision "reboot", type: "ansible" do |ansible|
            ansible.playbook = "../../reboot.yml"
            ansible.config_file = "ansible.cfg"
            ansible.host_vars = {
                "default" => { "ansible_python_interpreter" => "/usr/bin/python2" }
            }
            ansible.ask_become_pass = true
            ansible.compatibility_mode = "2.0"
        end
        config.vm.provision "facts", type: "ansible" do |ansible|
            ansible.playbook = "../../facts.yml"
            ansible.config_file = "ansible.cfg"
            ansible.host_vars = {
                "default" => { "ansible_python_interpreter" => "/usr/bin/python2" }
            }
            ansible.compatibility_mode = "2.0"
        end
        config.vm.provision "update", type: "ansible" do |ansible|
            ansible.playbook = "../../update.yml"
            ansible.config_file = "ansible.cfg"
            ansible.host_vars = {
                "default" => { "ansible_python_interpreter" => "/usr/bin/python2" }
            }
            ansible.ask_become_pass = true
            ansible.compatibility_mode = "2.0"
        end
        config.vm.provision "upgrade", type: "ansible" do |ansible|
            ansible.playbook = "../../upgrade.yml"
            ansible.config_file = "ansible.cfg"
            ansible.host_vars = {
                "default" => { "ansible_python_interpreter" => "/usr/bin/python2" }
            }
            ansible.ask_become_pass = true
            ansible.compatibility_mode = "2.0"
        end
    end
end
